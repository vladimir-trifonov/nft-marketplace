/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Utils, UtilsInterface } from "../Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "ml",
        type: "uint8",
      },
    ],
    name: "uint2hex64str",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610319806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ff947a014610030575b600080fd5b61004361003e3660046101c3565b610059565b6040516100509190610220565b60405180910390f35b60608261007e57506040805180820190915260018152600360fc1b60208201526101bd565b8260005b81156100a15780610092816102b2565b915050600482901c9150610082565b849150600f60008267ffffffffffffffff8111156100cf57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156100f9576020820181803683370190505b509050825b841561018057848316600981116101225761011a816030610253565b60f81b610131565b61012d816037610253565b60f81b5b8361013b8461029b565b9350838151811061015c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600486901c9550506100fe565b815b8760ff16815110156101b5578060405160200161019f91906101f7565b6040516020818303038152906040529050610182565b955050505050505b92915050565b600080604083850312156101d5578182fd5b82359150602083013560ff811681146101ec578182fd5b809150509250929050565b600360fc1b81526000825161021381600185016020870161026b565b9190910160010192915050565b602081526000825180602084015261023f81604085016020870161026b565b601f01601f19169190910160400192915050565b60008219821115610266576102666102cd565b500190565b60005b8381101561028657818101518382015260200161026e565b83811115610295576000848401525b50505050565b6000816102aa576102aa6102cd565b506000190190565b60006000198214156102c6576102c66102cd565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207e630fc2edecb5d1d48180a8816e149c72f0be081f39de09311f4b53033b935464736f6c63430008040033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Utils";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }
  static readonly contractName: "Utils";
  public readonly contractName: "Utils";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
