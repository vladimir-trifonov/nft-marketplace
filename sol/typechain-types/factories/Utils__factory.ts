/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Utils, UtilsInterface } from "../Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "ml",
        type: "uint8",
      },
    ],
    name: "uint2hex64str",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c54806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ff947a014610030575b600080fd5b61004a60048036038101906100459190610940565b610060565b6040516100579190610a2b565b60405180910390f35b606061008e7f48707162513cec30e5cb1dcf0caf5d33ed91f534c23aed3c18a985dcf4f4d07360001b610913565b6100ba7f60bf1e6afa348160fa4371499cf1d3c7ded9104abbbf9873691807d2f23c4df560001b610913565b6100e67ffdb41e4d5695982918a8280c8b23c786e09ca44ea7d9903aa958d92f1069213a60001b610913565b60008314156101845761011b7f703f8dede7ce3d9271bdec9d1ae7843def29f502378222603390039de912788160001b610913565b6101477fa521cd8735f14db3c64c368618cddddb7791d74a3f0f2233c81c7b7a13bd21bc60001b610913565b6040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061090d565b6101b07fa083971600ac48caf24245007017966c2ca7574a681fed6c6a97f0e41a411bea60001b610913565b6101dc7fa165249905ff0e00caea7da98596f2cba26578b22fec4bed300da4dd3f08958560001b610913565b6102087f76ed2916fbb00b6a22f536cf426a606446df3736bd300f50db0761bdbd6844f660001b610913565b60008390506102397f07a337a65214c03d2b4b46f7629d2ec5f41956d091ee33cb967be0ea5b016ef360001b610913565b6102657f1251094bde0254e2a9f6c54f2dc369af672f4a2916a78375a38bcad4238e6e5360001b610913565b60006102937f9567aa5bf50ae8c62eda8ab7abb80c8be54ca1f326cb3114b0224440c2384b5a60001b610913565b6102bf7ffba3eb6d4f1336b892b55c3029ae619fc5d91484f335bee608b7eb5f1964e51d60001b610913565b5b60008214610366576102f47f160c3f02ac7dd2b3d3eba88388b521fa0de555896ba4aed29bc919ac379685e660001b610913565b80806102ff90610b3e565b91505061032e7fa93b0f28ebbc30c0370635a93204139c1e5401ebc3b41f70fb9d935b9c037bb960001b610913565b61035a7fdabe9cd39fd714c078982cec46ab5e58e7cd51d5659f7b31b9f706e5fa1cef0560001b610913565b600482901c91506102c0565b6103927f309976f5ede95648cc3d1e08d498d898037b635771da6f00822bc864ae16bba460001b610913565b6103be7fd20c8b1bde696acf73e66254dfb152f4cd9a0550076ce9cd9777a552d4ef764560001b610913565b8491506103ed7f08c0ebb9fa690465296314d62b773559486e7d62dec29c06254205ced452a80160001b610913565b6104197f0c5dc7252aa00dc508c9f23e4b2c722063e4456336bed7cca26ad6a6ddf9a1ec60001b610913565b6000600f905061044b7f8daf475ed984a8c07710851dd04ebd19c15c02363e0804f46b84be9a8348b33160001b610913565b6104777fd86ab3754a008b0d79d9919509c4d0d9aa689e8a19cdc5d7f62af7937d1d62ba60001b610913565b60008267ffffffffffffffff8111156104b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156104eb5781602001600182028036833780820191505090505b50905061051a7fbd5e6582426dfc4f8a1ed3de9a9cdfbc002e47848007871fe428c1dc1b0ccb6360001b610913565b6105467fb5ae6401a4924b83d7c97ecbd3105ace87921f4e1701aed345504d8ca60fc2c260001b610913565b60008390506105777f48a8cb806f4fec7a7e9674a723d7fb4c2693eac83bd32c0acb4431e5cc919cb960001b610913565b6105a37f1547b8f2df3bb99c93fb5e39c107569850704dfb82d70dc51ffb6132675d9fc660001b610913565b5b6000851461076a576105d87fe410d13adaa71943086977c93d4033a9c040e89e703fff42dfd3d385c286439b60001b610913565b6106047f8860047456538289da48852a7cfcde2f254d994ef57c02f77025efa87e0c079860001b610913565b600083861690506106377f4cead7976a14e8068f5c433c18f432b14a5f1963ff385687c7ae6bd272c82d1960001b610913565b6106637f70a0c65f36bdd4ac4b316b00b6b877834c9e9a505e1e6702be23dbd11a5052eb60001b610913565b60098111610680578060306106789190610a74565b60f81b610691565b80603761068d9190610a74565b60f81b5b838361069c90610b14565b935083815181106106d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506107317f47e2d7ba1c5a1c8f3e7b8de5d621b2fb843f114fd1414749848aeac8b0eeff3960001b610913565b61075d7fe24976d3e97f62239d76b8a08afb14ade6d9f979d590036f4e4a7b1188b7040660001b610913565b600486901c9550506105a4565b6107967fd25cde07aac79808e4a75c6bf5523b0196da15ec08e5bfc7953407986dddf3b460001b610913565b6107c27f049ae4196629f983f4c9c43780d9f0642318072c523e1ca233a1b5818ae242d460001b610913565b60008290506107f37f0ebe441161e37ccaac73d821e5810e247f4e0f4b34e56f208808d11a939c7bc660001b610913565b61081f7fd0ad4fc40af4f67bc063666df51e78c41293f6c05c64b0b061e04a460fd2615960001b610913565b5b8760ff16815110156108ab576108587f7c2a852647fbae9a5d49d31665834dca1b59ffabc8182674701131a83490e87760001b610913565b6108847ff7257da46118695072cb13649c825f126dcb0108ab60d1bce829108a29aab33760001b610913565b806040516020016108959190610a09565b6040516020818303038152906040529050610820565b6108d77fead375fa200ec3c7ccc6f3b837477a03f28ab5ddce83b3ea39571663878609c860001b610913565b6109037fb6f10c96ae24ed92fd748643b82822f2dd85289372d683eb99d55ff801a2f97260001b610913565b8096505050505050505b92915050565b50565b60008135905061092581610bf0565b92915050565b60008135905061093a81610c07565b92915050565b6000806040838503121561095357600080fd5b600061096185828601610916565b92505060206109728582860161092b565b9150509250929050565b600061098782610a4d565b6109918185610a58565b93506109a1818560208601610ae1565b6109aa81610bb6565b840191505092915050565b60006109c082610a4d565b6109ca8185610a69565b93506109da818560208601610ae1565b80840191505092915050565b60006109f3600183610a69565b91506109fe82610bc7565b600182019050919050565b6000610a14826109e6565b9150610a2082846109b5565b915081905092915050565b60006020820190508181036000830152610a45818461097c565b905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610a7f82610aca565b9150610a8a83610aca565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610abf57610abe610b87565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b60005b83811015610aff578082015181840152602081019050610ae4565b83811115610b0e576000848401525b50505050565b6000610b1f82610aca565b91506000821415610b3357610b32610b87565b5b600182039050919050565b6000610b4982610aca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b7c57610b7b610b87565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f3000000000000000000000000000000000000000000000000000000000000000600082015250565b610bf981610aca565b8114610c0457600080fd5b50565b610c1081610ad4565b8114610c1b57600080fd5b5056fea26469706673582212205e3c65d1d3f70209495b0f445eeb33449d5a3b9612fd8c864a772a6b6057b8ac64736f6c63430008040033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Utils";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }
  static readonly contractName: "Utils";
  public readonly contractName: "Utils";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
